// this file was generated by serverless-auto-swagger
            module.exports = {
  "swagger": "2.0",
  "info": {
    "title": "Synapme-API-Documentation",
    "version": "1"
  },
  "paths": {
    "/user/create-account": {
      "post": {
        "summary": "create-user",
        "description": "",
        "tags": [
          "Authentication"
        ],
        "operationId": "create-user.post./user/create-account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created an account",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "user-login",
        "description": "",
        "tags": [
          "Authentication"
        ],
        "operationId": "user-login.post./user/login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginAccountRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/verify-account": {
      "post": {
        "summary": "verify-account",
        "description": "",
        "tags": [
          "Authentication"
        ],
        "operationId": "verify-account.post./user/verify-account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifyAccountRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account verified successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/forgot-password-link": {
      "post": {
        "summary": "forgot-password-link",
        "description": "",
        "tags": [
          "Authentication"
        ],
        "operationId": "forgot-password-link.post./user/forgot-password-link",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgotPasswordLinkRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Forgot password link sent successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/forgot-password": {
      "post": {
        "summary": "forgot-password",
        "description": "",
        "tags": [
          "Authentication"
        ],
        "operationId": "forgot-password.post./user/forgot-password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgotPasswordRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/update-profile-image/{id}": {
      "patch": {
        "summary": "update-profile-image",
        "description": "",
        "tags": [
          "Authentication"
        ],
        "operationId": "update-profile-image.patch./user/update-profile-image/{id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileImageRequestBody"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile Image updated successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "get-user",
        "description": "",
        "tags": [
          "Authentication"
        ],
        "operationId": "get-user.get./user/{id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "get-authorize-user",
        "description": "",
        "tags": [
          "Authentication"
        ],
        "operationId": "get-authorize-user.get./user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/update-account/{id}": {
      "patch": {
        "summary": "update-user-profile",
        "description": "",
        "tags": [
          "Authentication"
        ],
        "operationId": "update-user-profile.patch./user/update-account/{id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAccountRequestBody"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/upvote-account/{user_id}": {
      "post": {
        "summary": "upvote-user-profile",
        "description": "",
        "tags": [
          "Authentication"
        ],
        "operationId": "upvote-user-profile.post./user/upvote-account/{user_id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpvoteUserRequestsBody"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/notification-trigger": {
      "post": {
        "summary": "notification-trigger",
        "description": "",
        "tags": [
          "Notification"
        ],
        "operationId": "notification-trigger.post./notification-trigger",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationBodyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created an account",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscribe": {
      "post": {
        "summary": "subscribe",
        "description": "",
        "tags": [
          "Notification"
        ],
        "operationId": "subscribe.post./subscribe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscribeBodyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully subscribed to notifications",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/notifications/{user_id}": {
      "get": {
        "summary": "get-all-notification",
        "description": "",
        "tags": [
          "Notification"
        ],
        "operationId": "get-all-notification.get./notifications/{user_id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string",
            "description": "user id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetch user notifications",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/posts/{post_id}": {
      "get": {
        "summary": "get-post",
        "description": "",
        "tags": [
          "Posting"
        ],
        "operationId": "get-post.get./posts/{post_id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPostRequestBody"
            }
          },
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/posts/get-all-post": {
      "post": {
        "summary": "get-all-post",
        "description": "",
        "tags": [
          "Posting"
        ],
        "operationId": "get-all-post.post./posts/get-all-post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAllPostRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/post-by-author-id/{author_id}": {
      "post": {
        "summary": "get-post-by-author",
        "description": "",
        "tags": [
          "Posting"
        ],
        "operationId": "get-post-by-author.post./post-by-author-id/{author_id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPostsByAuthorRequestBody"
            }
          },
          {
            "name": "author_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/post": {
      "post": {
        "summary": "create-post",
        "description": "",
        "tags": [
          "Posting"
        ],
        "operationId": "create-post.post./post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePostRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/comments/{comment_id}": {
      "get": {
        "summary": "get-comment",
        "description": "",
        "tags": [
          "Posting"
        ],
        "operationId": "get-comment.get./comments/{comment_id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCommentRequestBody"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/comments-by-post-id/{post_id}": {
      "post": {
        "summary": "get-comments-by-post-id",
        "description": "",
        "tags": [
          "Posting"
        ],
        "operationId": "get-comments-by-post-id.post./comments-by-post-id/{post_id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCommentsByPostRequestBody"
            }
          },
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/comments": {
      "post": {
        "summary": "create-comment",
        "description": "",
        "tags": [
          "Posting"
        ],
        "operationId": "create-comment.post./comments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCommentRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/up-vote-post": {
      "post": {
        "summary": "up-vote-post",
        "description": "",
        "tags": [
          "Upvoting"
        ],
        "operationId": "up-vote-post.post./up-vote-post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpVotePostRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/up-vote-shared-post": {
      "post": {
        "summary": "up-vote-shared-post",
        "description": "",
        "tags": [
          "Upvoting"
        ],
        "operationId": "up-vote-shared-post.post./up-vote-shared-post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpVoteSharedPostRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/up-vote-comment": {
      "post": {
        "summary": "up-vote-comment",
        "description": "",
        "tags": [
          "Upvoting"
        ],
        "operationId": "up-vote-comment.post./up-vote-comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpVoteCommentRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/get-shared-post/{author_id}": {
      "post": {
        "summary": "get-shared-posts-by-author",
        "description": "",
        "tags": [
          "Sharing"
        ],
        "operationId": "get-shared-posts-by-author.post./get-shared-post/{author_id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetSharedPostByAuthorRequestBody"
            }
          },
          {
            "name": "author_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/create-share-post": {
      "post": {
        "summary": "create-share-post",
        "description": "",
        "tags": [
          "Sharing"
        ],
        "operationId": "create-share-post.post./create-share-post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharePostRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/neural/create": {
      "post": {
        "summary": "create-neural",
        "description": "",
        "tags": [
          "Neural Group"
        ],
        "operationId": "create-neural.post./neural/create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNeuralRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created an neural",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/neural/{id}": {
      "get": {
        "summary": "get-neural-by-user",
        "description": "",
        "tags": [
          "Neural Group"
        ],
        "operationId": "get-neural-by-user.get./neural/{id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Neurals fetched successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/neural-requests/create": {
      "post": {
        "summary": "create-neural-requests",
        "description": "",
        "tags": [
          "Neural Group Requests"
        ],
        "operationId": "create-neural-requests.post./neural-requests/create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNeuralRequestsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully  neural request sent",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/neural-requests/neurals/{neural_id}": {
      "get": {
        "summary": "get-neural-requests_by_neural_id",
        "description": "",
        "tags": [
          "Neural Group Requests"
        ],
        "operationId": "get-neural-requests_by_neural_id.get./neural-requests/neurals/{neural_id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "neural_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Neurals fetched successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/neural-requests/{neural_requests_id}": {
      "get": {
        "summary": "get-neural-requests_by_neural_requests_id",
        "description": "",
        "tags": [
          "Neural Group Requests"
        ],
        "operationId": "get-neural-requests_by_neural_requests_id.get./neural-requests/{neural_requests_id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "neural_requests_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Neurals fetched successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/neural-requests/decision": {
      "post": {
        "summary": "neural-requests-decision",
        "description": "",
        "tags": [
          "Neural Group Requests"
        ],
        "operationId": "neural-requests-decision.post./neural-requests/decision",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NeuralRequestDecisionRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Neural Request updated successfully",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/send/friend-request": {
      "post": {
        "summary": "send-friend-request",
        "description": "",
        "tags": [
          "Request"
        ],
        "operationId": "send-friend-request.post./send/friend-request",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FriendRequestBodyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created an account",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/debate/create": {
      "post": {
        "summary": "create-debate",
        "description": "",
        "tags": [
          "Debate Requests"
        ],
        "operationId": "create-debate.post./debate/create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDebateRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created an debate",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "properties": {
        "error": {
          "title": "ErrorResponse.error",
          "type": "boolean"
        },
        "message": {
          "title": "ErrorResponse.message",
          "type": "string"
        },
        "data": {
          "title": "ErrorResponse.data"
        }
      },
      "required": [
        "error",
        "message",
        "data"
      ],
      "additionalProperties": false,
      "title": "ErrorResponse",
      "type": "object"
    },
    "CreateAccountRequestBody": {
      "properties": {
        "email": {
          "title": "CreateAccountRequestBody.email",
          "type": "string"
        },
        "userName": {
          "title": "CreateAccountRequestBody.userName",
          "type": "string"
        },
        "firstName": {
          "title": "CreateAccountRequestBody.firstName",
          "type": "string"
        },
        "lastName": {
          "title": "CreateAccountRequestBody.lastName",
          "type": "string"
        },
        "dataOfBirth": {
          "title": "CreateAccountRequestBody.dataOfBirth",
          "type": "string"
        },
        "gender": {
          "title": "CreateAccountRequestBody.gender",
          "type": "string"
        },
        "background": {
          "properties": {
            "stem": {
              "title": "CreateAccountRequestBody.background.stem",
              "type": "string"
            },
            "technologyEthicsBeliefs": {
              "title": "CreateAccountRequestBody.background.technologyEthicsBeliefs",
              "type": "string"
            }
          },
          "required": [
            "stem",
            "technologyEthicsBeliefs"
          ],
          "additionalProperties": false,
          "title": "CreateAccountRequestBody.background",
          "type": "object"
        },
        "profileImageUrl": {
          "title": "CreateAccountRequestBody.profileImageUrl",
          "type": "string"
        },
        "password": {
          "title": "CreateAccountRequestBody.password",
          "type": "string"
        }
      },
      "required": [
        "email",
        "userName",
        "firstName",
        "lastName",
        "dataOfBirth",
        "gender",
        "background",
        "profileImageUrl",
        "password"
      ],
      "additionalProperties": false,
      "title": "CreateAccountRequestBody",
      "type": "object"
    },
    "LoginAccountRequestBody": {
      "properties": {
        "email": {
          "title": "LoginAccountRequestBody.email",
          "type": "string"
        },
        "password": {
          "title": "LoginAccountRequestBody.password",
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "additionalProperties": false,
      "title": "LoginAccountRequestBody",
      "type": "object"
    },
    "VerifyAccountRequestBody": {
      "properties": {
        "email": {
          "title": "VerifyAccountRequestBody.email",
          "type": "string"
        },
        "verificationCode": {
          "title": "VerifyAccountRequestBody.verificationCode",
          "type": "string"
        }
      },
      "required": [
        "email",
        "verificationCode"
      ],
      "additionalProperties": false,
      "title": "VerifyAccountRequestBody",
      "type": "object"
    },
    "ForgotPasswordLinkRequestBody": {
      "properties": {
        "email": {
          "title": "ForgotPasswordLinkRequestBody.email",
          "type": "string"
        }
      },
      "required": [
        "email"
      ],
      "additionalProperties": false,
      "title": "ForgotPasswordLinkRequestBody",
      "type": "object"
    },
    "ForgotPasswordRequestBody": {
      "properties": {
        "code": {
          "title": "ForgotPasswordRequestBody.code",
          "type": "string"
        },
        "password": {
          "title": "ForgotPasswordRequestBody.password",
          "type": "string"
        }
      },
      "required": [
        "code",
        "password"
      ],
      "additionalProperties": false,
      "title": "ForgotPasswordRequestBody",
      "type": "object"
    },
    "Response": {
      "properties": {
        "statusCode": {
          "title": "Response.statusCode",
          "type": "number"
        },
        "message": {
          "title": "Response.message",
          "type": "string"
        },
        "data": {
          "title": "Response.data"
        }
      },
      "required": [
        "statusCode",
        "message"
      ],
      "additionalProperties": false,
      "title": "Response",
      "type": "object"
    },
    "NotificationBodyRequest": {
      "properties": {
        "title": {
          "title": "NotificationBodyRequest.title",
          "type": "string"
        },
        "payload": {
          "additionalProperties": {},
          "title": "NotificationBodyRequest.payload",
          "type": "object"
        },
        "receiversID": {
          "items": {
            "title": "NotificationBodyRequest.receiversID.[]",
            "type": "string"
          },
          "title": "NotificationBodyRequest.receiversID",
          "type": "array"
        }
      },
      "required": [
        "title",
        "payload",
        "receiversID"
      ],
      "additionalProperties": false,
      "title": "NotificationBodyRequest",
      "type": "object"
    },
    "FriendRequestBodyRequest": {
      "properties": {
        "receiverID": {
          "title": "FriendRequestBodyRequest.receiverID",
          "type": "string"
        },
        "payload": {
          "additionalProperties": {},
          "title": "FriendRequestBodyRequest.payload",
          "type": "object"
        }
      },
      "required": [
        "receiverID",
        "payload"
      ],
      "additionalProperties": false,
      "title": "FriendRequestBodyRequest",
      "type": "object"
    },
    "SubscribeBodyRequest": {
      "properties": {
        "expirationTime": {
          "title": "SubscribeBodyRequest.expirationTime",
          "nullable": true,
          "type": "string"
        },
        "endpoint": {
          "title": "SubscribeBodyRequest.endpoint",
          "type": "string"
        },
        "keys": {
          "properties": {
            "p256dh": {
              "title": "SubscribeBodyRequest.keys.p256dh",
              "type": "string"
            },
            "auth": {
              "title": "SubscribeBodyRequest.keys.auth",
              "type": "string"
            }
          },
          "required": [
            "p256dh",
            "auth"
          ],
          "additionalProperties": false,
          "title": "SubscribeBodyRequest.keys",
          "type": "object"
        }
      },
      "required": [
        "expirationTime",
        "endpoint",
        "keys"
      ],
      "additionalProperties": false,
      "title": "SubscribeBodyRequest",
      "type": "object"
    },
    "CreatePostRequestBody": {
      "properties": {
        "authorId": {
          "title": "CreatePostRequestBody.authorId",
          "type": "string"
        },
        "content": {
          "title": "CreatePostRequestBody.content",
          "type": "string"
        },
        "media": {
          "properties": {
            "images": {
              "items": {
                "title": "CreatePostRequestBody.media.images.[]",
                "type": "string"
              },
              "title": "CreatePostRequestBody.media.images",
              "type": "array"
            },
            "videos": {
              "items": {
                "title": "CreatePostRequestBody.media.videos.[]",
                "type": "string"
              },
              "title": "CreatePostRequestBody.media.videos",
              "type": "array"
            }
          },
          "required": [
            "images",
            "videos"
          ],
          "additionalProperties": false,
          "title": "CreatePostRequestBody.media",
          "type": "object"
        }
      },
      "required": [
        "authorId",
        "content",
        "media"
      ],
      "additionalProperties": false,
      "title": "CreatePostRequestBody",
      "type": "object"
    },
    "CreateCommentRequestBody": {
      "properties": {
        "postId": {
          "title": "CreateCommentRequestBody.postId",
          "type": "string"
        },
        "createdAt": {
          "title": "CreateCommentRequestBody.createdAt",
          "type": "string"
        },
        "authorId": {
          "title": "CreateCommentRequestBody.authorId",
          "type": "string"
        },
        "content": {
          "title": "CreateCommentRequestBody.content",
          "type": "string"
        },
        "receiverId": {
          "title": "CreateCommentRequestBody.receiverId",
          "type": "string"
        }
      },
      "required": [
        "postId",
        "createdAt",
        "authorId",
        "content",
        "receiverId"
      ],
      "additionalProperties": false,
      "title": "CreateCommentRequestBody",
      "type": "object"
    },
    "SharePostRequestBody": {
      "properties": {
        "postId": {
          "title": "SharePostRequestBody.postId",
          "type": "string"
        },
        "authorId": {
          "title": "SharePostRequestBody.authorId",
          "type": "string"
        },
        "description": {
          "title": "SharePostRequestBody.description",
          "type": "string"
        },
        "createdAt": {
          "title": "SharePostRequestBody.createdAt",
          "type": "string"
        },
        "receiverId": {
          "title": "SharePostRequestBody.receiverId",
          "type": "string"
        },
        "payload": {
          "additionalProperties": {},
          "title": "SharePostRequestBody.payload",
          "type": "object"
        }
      },
      "required": [
        "postId",
        "authorId",
        "description",
        "createdAt",
        "receiverId",
        "payload"
      ],
      "additionalProperties": false,
      "title": "SharePostRequestBody",
      "type": "object"
    },
    "UpVoteCommentRequestBody": {
      "properties": {
        "commentId": {
          "title": "UpVoteCommentRequestBody.commentId",
          "type": "string"
        },
        "createdAt": {
          "title": "UpVoteCommentRequestBody.createdAt",
          "type": "string"
        },
        "userId": {
          "title": "UpVoteCommentRequestBody.userId",
          "type": "string"
        },
        "receiverId": {
          "title": "UpVoteCommentRequestBody.receiverId",
          "type": "string"
        },
        "payload": {
          "additionalProperties": {},
          "title": "UpVoteCommentRequestBody.payload",
          "type": "object"
        }
      },
      "required": [
        "commentId",
        "createdAt",
        "userId",
        "receiverId",
        "payload"
      ],
      "additionalProperties": false,
      "title": "UpVoteCommentRequestBody",
      "type": "object"
    },
    "UpVoteSharedPostRequestBody": {
      "properties": {
        "sharedPostId": {
          "title": "UpVoteSharedPostRequestBody.sharedPostId",
          "type": "string"
        },
        "userId": {
          "title": "UpVoteSharedPostRequestBody.userId",
          "type": "string"
        },
        "createdAt": {
          "title": "UpVoteSharedPostRequestBody.createdAt",
          "type": "string"
        },
        "receiverId": {
          "title": "UpVoteSharedPostRequestBody.receiverId",
          "type": "string"
        },
        "payload": {
          "additionalProperties": {},
          "title": "UpVoteSharedPostRequestBody.payload",
          "type": "object"
        }
      },
      "required": [
        "sharedPostId",
        "userId",
        "createdAt",
        "receiverId",
        "payload"
      ],
      "additionalProperties": false,
      "title": "UpVoteSharedPostRequestBody",
      "type": "object"
    },
    "UpVotePostRequestBody": {
      "properties": {
        "userId": {
          "title": "UpVotePostRequestBody.userId",
          "type": "string"
        },
        "postId": {
          "title": "UpVotePostRequestBody.postId",
          "type": "string"
        },
        "createdAt": {
          "title": "UpVotePostRequestBody.createdAt",
          "type": "string"
        },
        "receiverId": {
          "title": "UpVotePostRequestBody.receiverId",
          "type": "string"
        },
        "payload": {
          "additionalProperties": {},
          "title": "UpVotePostRequestBody.payload",
          "type": "object"
        }
      },
      "required": [
        "userId",
        "postId",
        "createdAt",
        "receiverId",
        "payload"
      ],
      "additionalProperties": false,
      "title": "UpVotePostRequestBody",
      "type": "object"
    },
    "UpdateAccountRequestBody": {
      "properties": {
        "user_name": {
          "title": "UpdateAccountRequestBody.user_name",
          "type": "string"
        },
        "first_name": {
          "title": "UpdateAccountRequestBody.first_name",
          "type": "string"
        },
        "last_name": {
          "title": "UpdateAccountRequestBody.last_name",
          "type": "string"
        },
        "date_of_birth": {
          "title": "UpdateAccountRequestBody.date_of_birth",
          "type": "string"
        },
        "gender": {
          "title": "UpdateAccountRequestBody.gender",
          "type": "string"
        },
        "background": {
          "properties": {
            "stem": {
              "title": "UpdateAccountRequestBody.background.stem",
              "type": "string"
            },
            "technologyEthicsBeliefs": {
              "title": "UpdateAccountRequestBody.background.technologyEthicsBeliefs",
              "type": "string"
            }
          },
          "required": [
            "stem",
            "technologyEthicsBeliefs"
          ],
          "additionalProperties": false,
          "title": "UpdateAccountRequestBody.background",
          "type": "object"
        }
      },
      "required": [
        "user_name",
        "first_name",
        "last_name",
        "date_of_birth",
        "gender",
        "background"
      ],
      "additionalProperties": false,
      "title": "UpdateAccountRequestBody",
      "type": "object"
    },
    "UpdateProfileImageRequestBody": {
      "properties": {
        "profile_image_url": {
          "title": "UpdateProfileImageRequestBody.profile_image_url",
          "type": "string"
        }
      },
      "required": [
        "profile_image_url"
      ],
      "additionalProperties": false,
      "title": "UpdateProfileImageRequestBody",
      "type": "object"
    },
    "NeuralRequestDecisionRequestBody": {
      "properties": {
        "decision": {
          "title": "NeuralRequestDecisionRequestBody.decision",
          "type": "string"
        },
        "neural_requests_id": {
          "title": "NeuralRequestDecisionRequestBody.neural_requests_id",
          "type": "string"
        }
      },
      "required": [
        "decision",
        "neural_requests_id"
      ],
      "additionalProperties": false,
      "title": "NeuralRequestDecisionRequestBody",
      "type": "object"
    },
    "CreateNeuralRequestBody": {
      "properties": {
        "title": {
          "title": "CreateNeuralRequestBody.title",
          "type": "string"
        },
        "description": {
          "title": "CreateNeuralRequestBody.description",
          "type": "string"
        },
        "leader_id": {
          "title": "CreateNeuralRequestBody.leader_id",
          "type": "string"
        }
      },
      "required": [
        "title",
        "description",
        "leader_id"
      ],
      "additionalProperties": false,
      "title": "CreateNeuralRequestBody",
      "type": "object"
    },
    "CreateNeuralRequestsBody": {
      "properties": {
        "neural_id": {
          "title": "CreateNeuralRequestsBody.neural_id",
          "type": "string"
        },
        "user_id": {
          "title": "CreateNeuralRequestsBody.user_id",
          "type": "string"
        }
      },
      "required": [
        "neural_id",
        "user_id"
      ],
      "additionalProperties": false,
      "title": "CreateNeuralRequestsBody",
      "type": "object"
    },
    "UpvoteUserRequestsBody": {
      "properties": {
        "count": {
          "title": "UpvoteUserRequestsBody.count",
          "type": "number"
        }
      },
      "required": [
        "count"
      ],
      "additionalProperties": false,
      "title": "UpvoteUserRequestsBody",
      "type": "object"
    },
    "CreateDebateRequestBody": {
      "properties": {
        "topic": {
          "title": "CreateDebateRequestBody.topic",
          "type": "string"
        },
        "description": {
          "title": "CreateDebateRequestBody.description",
          "type": "string"
        },
        "opponent_id": {
          "title": "CreateDebateRequestBody.opponent_id",
          "type": "string"
        },
        "affirmative": {
          "title": "CreateDebateRequestBody.affirmative",
          "type": "string"
        },
        "negative": {
          "title": "CreateDebateRequestBody.negative",
          "type": "string"
        }
      },
      "required": [
        "topic",
        "description",
        "opponent_id",
        "affirmative",
        "negative"
      ],
      "additionalProperties": false,
      "title": "CreateDebateRequestBody",
      "type": "object"
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "basePath": "/dev",
  "schemes": [
    "http",
    "https"
  ]
};